{"version":3,"sources":["logo.svg","components/base/Base.js","components/tomato/Tomato.js","components/mushroom/Mushroom.js","components/corn/Corn.js","components/veggie/Veggie.js","components/buttonGroup/ButtonGroup.js","components/chatbot/CustomChatbot.js","components/pizza/Pizza.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Base","className","Tomato","Mushroom","Corn","Veggie","ButtonGroup","props","buttonWidth","width","style","onClick","eventHandler","CustomChatbot","steps","id","message","trigger","user","options","value","label","end","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","height","floating","Pizza","clickEventHandler","ingredient","setState","tomato","state","mushroom","corn","veggie","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2f634fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nfunction Base() {\n  return (\n    <div>\n      <div className=\"pizza-base-1\" />\n      <div className=\"pizza-base-2\" />\n      <div className=\"slice-base-1\" />\n      <div className=\"slice-base-2\" />\n    </div>\n  );\n}\n\nexport default Base;\n","import React from \"react\";\n\nfunction Tomato() {\n  return (\n    <div>\n      <div className=\"tomatoes\">\n        <div className=\"tomato-1\" />\n        <div className=\"tomato-2\" />\n        <div className=\"tomato-3\" />\n        <div className=\"tomato-4\" />\n        <div className=\"tomato-5\" />\n        <div className=\"tomato-6\" />\n        <div className=\"tomato-7\" />\n        <div className=\"tomato-8\" />\n      </div>\n\n      <div className=\"tomatoes\">\n        <div className=\"tomato-9\" />\n        <div className=\"tomato-10\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Tomato;\n","import React from \"react\";\n\nfunction Mushroom() {\n  return (\n    <div>\n      <div className=\"mushrooms\">\n        <div className=\"cup-1\" />\n        <div className=\"stem-1\" />\n        <div className=\"cup-2\" />\n        <div className=\"stem-2\" />\n        <div className=\"cup-3\" />\n        <div className=\"stem-3\" />\n        <div className=\"cup-4\" />\n        <div className=\"stem-4\" />\n        <div className=\"cup-5\" />\n        <div className=\"stem-5\" />\n        <div className=\"cup-6\" />\n        <div className=\"stem-6\" />\n        <div className=\"cup-7\" />\n        <div className=\"stem-7\" />\n      </div>\n\n      <div className=\"mushrooms\">\n        <div className=\"cup-8\" />\n        <div className=\"stem-8\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Mushroom;\n","import React from \"react\";\n\nfunction Corn() {\n  return (\n    <div>\n      <div className=\"corns\">\n        <div className=\"corn-1\" />\n        <div className=\"corn-2\" />\n        <div className=\"corn-3\" />\n        <div className=\"corn-4\" />\n        <div className=\"corn-5\" />\n        <div className=\"corn-6\" />\n        <div className=\"corn-7\" />\n        <div className=\"corn-8\" />\n        <div className=\"corn-9\" />\n        <div className=\"corn-10\" />\n        <div className=\"corn-11\" />\n      </div>\n\n      <div className=\"corns\">\n        <div className=\"corn-11\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Corn;\n","import React from \"react\";\n\nfunction Veggie() {\n  return (\n    <div>\n      <div className=\"vegies\">\n        <div className=\"veg-1\" />\n        <div className=\"veg-2\" />\n        <div className=\"veg-3\" />\n        <div className=\"veg-4\" />\n        <div className=\"veg-5\" />\n        <div className=\"veg-6\" />\n        <div className=\"veg-7\" />\n        <div className=\"veg-8\" />\n        <div className=\"veg-9\" />\n        <div className=\"veg-10\" />\n        <div className=\"veg-11\" />\n        <div className=\"veg-12\" />\n        <div className=\"veg-13\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Veggie;\n","import React from \"react\";\n\nfunction ButtonGroup(props) {\n  const buttonWidth = {\n    width: \"300px\"\n  };\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-danger btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"tomato\");\n          }}\n        >\n          Add/Remove Tomato\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-secondary btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"mushroom\");\n          }}\n        >\n          Add/Remove Mushroom\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-warning btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"corn\");\n          }}\n        >\n          Add/Remove Corn\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-success 1-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"veggie\");\n          }}\n        >\n          Add/Remove Veggie\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport { ThemeProvider } from \"styled-components\";\n\nfunction CustomChatbot(props) {\n\n\tconst config = {\n\t\twidth: \"300px\",\n\t\theight: \"400px\",\n\t\tfloating: true\n\t};\n\tconst theme = {\n         background: \"white\",\n         fontFamily: \"Arial, Helvetica, sans-serif\",\n         headerBgColor: \"#00B2B2\",\n         headerFontColor: \"#fff\",\n         headerFontSize: \"25px\",\n         botBubbleColor: \"#00B2B2\",\n         botFontColor: \"#fff\",\n         userBubbleColor: \"#fff\",\n         userFontColor: \"#4c4c4c\",\n        };\n\n\tconst steps = [\n\t{\n     \tid: \"Greet\",\n     \tmessage: \"Hello, Welcome to our shop\",\n     \ttrigger: \"Ask Name\"\n    },\n\t{\n\t\tid: \"Ask Name\",\n\t\tmessage: \"Please type your name ?\",\n\t\ttrigger: \"Waiting user input for name\"\n\t},\n\t{\n\t\tid: \"Waiting user input for name\",\n\t\tuser: true,\n\t\ttrigger: \"Asking options to eat\"\n\t},\n\t{\n\t\tid: \"Asking options to eat\",\n\t\tmessage: \"Hi {previousValue}, Please click on what you want to eat!\",\n\t\ttrigger: \"Displaying options to eat\"\n\t},\n\t{\n\t\tid: \"Displaying options to eat\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"pizza\",\n\t\t\t\t\t\tlabel: \"Pizza\",\n\t\t\t\t\t\ttrigger: \"Asking for Tomatoes in Pizza\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"burger\",\n\t\t\t\t\t\tlabel: \"Burger\",\n\t\t\t\t\t\ttrigger: \"Burger Not available\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\n\t{\n\t\tid: \"Burger Not available\",\n\t\tmessage: \"Sorry , We don't have burger available at the moment.Would you like to try our pizza? \",\n\t\ttrigger: \"Asking for pizza after burger\"\n\t},\n\t{\n\t\tid: \"Asking for pizza after burger\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\ttrigger: \"Asking for Tomatoes in Pizza\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\ttrigger: \"Done\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\n\t{\n\t\tid: \"Asking for Tomatoes in Pizza\",\n\t\tmessage: \"Would you like to have some tomatoes in your pizza ? \",\n\t\ttrigger: \"Adding Tomatoes in Pizza\"\n\t},\n\t{\n\t\tid: \"Adding Tomatoes in Pizza\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\t\tprops.eventHandler(\"tomato\");\n\t\t\t\t\t\t\treturn \"Asking for Mushroom in Pizza\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\ttrigger: \"Asking for Mushroom in Pizza\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\n\t{\n\t\tid: \"Asking for Mushroom in Pizza\",\n\t\tmessage: \"Would you like to have some mushroom in your pizza ? \",\n\t\ttrigger: \"Adding Mushroom in Pizza\"\n\t},\n\t{\n\t\tid: \"Adding Mushroom in Pizza\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\t\tprops.eventHandler(\"mushroom\");\n\t\t\t\t\t\t\treturn \"Asking for Corn in Pizza\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\ttrigger: \"Asking for Corn in Pizza\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\n\t{\n\t\tid: \"Asking for Corn in Pizza\",\n\t\tmessage: \"Would you like to have corn in your pizza ? \",\n\t\ttrigger: \"Adding Corn in Pizza\"\n\t},\n\t{\n\t\tid: \"Adding Corn in Pizza\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\t\tprops.eventHandler(\"corn\");\n\t\t\t\t\t\t\treturn \"Asking for Veggies in Pizza\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\ttrigger: \"Asking for Veggies in Pizza\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\n\t{\n\t\tid: \"Asking for Veggies in Pizza\",\n\t\tmessage: \"Would you like to have veggies in your pizza ? \",\n\t\ttrigger: \"Adding Veggies in Pizza\"\n\t},\n\t{\n\t\tid: \"Adding Veggies in Pizza\",\n\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\ttrigger: () => {\n\t\t\t\t\t\t\tprops.eventHandler(\"veggie\");\n\t\t\t\t\t\t\treturn \"Done\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\ttrigger: \"Done\"\n\t\t\t\t\t}\n\t\t\t\t ]\n\t},\t\t\t \n\t{\n\t\tid: \"Done\",\n\t\tmessage:\"Your Pizza is ready.Have a great day!!\",\n\t\tend: true\n\t}\n\t];\n\treturn (<ThemeProvider theme={theme}>\n\t\t\t\t<ChatBot steps={steps} {...config} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t\n}\n\nexport default CustomChatbot;","import React, { Component } from \"react\";\nimport \"./Pizza.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Base from \"../base/Base\";\nimport Tomato from \"../tomato/Tomato\";\nimport Mushroom from \"../mushroom/Mushroom\";\nimport Corn from \"../corn/Corn\";\nimport Veggie from \"../veggie/Veggie\";\nimport ButtonGroup from \"../buttonGroup/ButtonGroup\";\nimport CustomChatbot from \"../chatbot/CustomChatbot\";\n\nclass Pizza extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tomato: false,\n      mushroom: false,\n      veggie: false,\n      corn: false\n    };\n  }\n\n  clickEventHandler = ingredient => {\n    if (ingredient === \"tomato\") {\n      this.setState({\n        tomato: !this.state.tomato\n      });\n    } else if (ingredient === \"mushroom\") {\n      this.setState({\n        mushroom: !this.state.mushroom\n      });\n    } else if (ingredient === \"corn\") {\n      this.setState({\n        corn: !this.state.corn\n      });\n    } else {\n      this.setState({\n        veggie: !this.state.veggie\n      });\n    }\n  };\n\n  render() {\n    const tomato = this.state.tomato && <Tomato />;\n    const mushroom = this.state.mushroom && <Mushroom />;\n    const corn = this.state.corn && <Corn />;\n    const veggie = this.state.veggie && <Veggie />;\n\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"plate\">\n              <Base />\n              {tomato}\n              {mushroom}\n              {corn}\n              {veggie}\n            </div>\n          </div>\n           <CustomChatbot eventHandler={this.clickEventHandler}/>\n          <ButtonGroup eventHandler={this.clickEventHandler} />\n         \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pizza;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Pizza from \"./components/pizza/Pizza\";\n\nfunction App() {\n  return <Pizza />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}